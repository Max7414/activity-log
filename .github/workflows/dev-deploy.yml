name: CI Dev Deployment
on:
  push:
    branches: [ master ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (no cache)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # ★ 執行本地 action（正確：uses + with）
      - name: Run local activity-log action
        uses: ./
        with:
          GITHUB_USERNAME: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EVENT_LIMIT: 10
          OUTPUT_STYLE: MARKDOWN

      - name: Install & Build (Node project if present)
        run: |
          if [ -f package.json ]; then
            corepack enable || true
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
            npm run -s build || true
          fi

      - name: Package artifact
        run: |
          zip -r build.zip . -x ".git/*"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip
          retention-days: 7

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Create or Update Dev Release (idempotent)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          TAG:  ${{ vars.BUILD_TAG }}     # 在 Environment: dev 設 dev-v1.0
          NOTE: ${{ vars.RELEASE_NOTE }}  # 例：Dev preview
        run: |
          set -e
          ls -al
          if gh release view "$TAG" --repo "$REPO" > /dev/null 2>&1; then
            echo "Release $TAG exists. Uploading asset and updating notes..."
            gh release upload "$TAG" build.zip --clobber --repo "$REPO"
            gh release edit "$TAG" --notes "$NOTE" --repo "$REPO"
          else
            echo "Release $TAG not found. Creating..."
            gh release create "$TAG" build.zip --notes "$NOTE" --latest=false --repo "$REPO"
          fi
