name: CI Dev Deployment
on:
  push:
    branches: [ master ]       # 你的預設分支是 master

permissions:
  contents: write              # 發 Release 需要

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 若是 Node 專案就安裝與建置；不是也不會失敗
      - name: Install & Build (Node project if present)
        run: |
          if [ -f package.json ]; then
            corepack enable || true
            (npm ci || npm install)
            npm run -s build || true
          fi

      - name: Package artifact
        run: |
          zip -r build.zip . -x ".git/*"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip
          retention-days: 7

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release Dev Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}     # gh 會自動讀 GH_TOKEN/GITHUB_TOKEN
          TAG: ${{ vars.BUILD_TAG }}                # 例：dev-v1.0（在 environment: dev 設定）
          NOTE: ${{ vars.RELEASE_NOTE }}            # 例：Dev preview
          REPO: ${{ github.repository }}            # e.g. user/repo
        run: |
          ls -al
          gh release create "$TAG" build.zip --notes "$NOTE" --latest=false --repo "$REPO"
